# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Post`.
# Please instead update this file by running `bin/tapioca dsl Post`.

class Post
  sig { returns(T.nilable(BSON::ObjectId)) }
  def _id; end

  sig { params(val: T.nilable(BSON::ObjectId)).returns(T.nilable(BSON::ObjectId)) }
  def _id=(val); end

  sig { returns(T::Boolean) }
  def _id?; end

  sig { returns(T::Array[T.nilable(BSON::ObjectId)]) }
  def _id_change; end

  sig { returns(T::Boolean) }
  def _id_changed?; end

  sig { returns(T.nilable(BSON::ObjectId)) }
  def _id_was; end

  sig { returns(T.nilable(String)) }
  def a; end

  sig { params(val: T.nilable(String)).returns(T.nilable(String)) }
  def a=(val); end

  sig { returns(T::Boolean) }
  def a?; end

  sig { returns(T::Array[T.nilable(String)]) }
  def a_change; end

  sig { returns(T::Boolean) }
  def a_changed?; end

  sig { returns(T.nilable(String)) }
  def a_was; end

  sig { returns(T.nilable(T::Array[T.untyped])) }
  def array_field; end

  sig { params(val: T.nilable(T::Array[T.untyped])).returns(T.nilable(T::Array[T.untyped])) }
  def array_field=(val); end

  sig { returns(T::Boolean) }
  def array_field?; end

  sig { returns(T::Array[T.nilable(T::Array[T.untyped])]) }
  def array_field_change; end

  sig { returns(T::Boolean) }
  def array_field_changed?; end

  sig { returns(T.nilable(T::Array[T.untyped])) }
  def array_field_was; end

  sig { returns(T.nilable(String)) }
  def author; end

  sig { params(val: T.nilable(String)).returns(T.nilable(String)) }
  def author=(val); end

  sig { returns(T::Boolean) }
  def author?; end

  sig { returns(T::Array[T.nilable(String)]) }
  def author_change; end

  sig { returns(T::Boolean) }
  def author_changed?; end

  sig { returns(T.nilable(String)) }
  def author_was; end

  sig { returns(T.nilable(String)) }
  def body; end

  sig { params(val: T.nilable(String)).returns(T.nilable(String)) }
  def body=(val); end

  sig { returns(T::Boolean) }
  def body?; end

  sig { returns(T::Array[T.nilable(String)]) }
  def body_change; end

  sig { returns(T::Boolean) }
  def body_changed?; end

  sig { returns(T.nilable(String)) }
  def body_was; end

  sig { returns(T.nilable(Integer)) }
  def count; end

  sig { params(val: T.nilable(Integer)).returns(T.nilable(Integer)) }
  def count=(val); end

  sig { returns(T::Boolean) }
  def count?; end

  sig { returns(T::Array[T.nilable(Integer)]) }
  def count_change; end

  sig { returns(T::Boolean) }
  def count_changed?; end

  sig { returns(T.nilable(Integer)) }
  def count_was; end

  sig { returns(T.nilable(Time)) }
  def created_at; end

  sig { params(val: T.nilable(Time)).returns(T.nilable(Time)) }
  def created_at=(val); end

  sig { returns(T::Boolean) }
  def created_at?; end

  sig { returns(T::Array[T.nilable(Time)]) }
  def created_at_change; end

  sig { returns(T::Boolean) }
  def created_at_changed?; end

  sig { returns(T.nilable(Time)) }
  def created_at_was; end

  sig { returns(T.nilable(BSON::ObjectId)) }
  def id; end

  sig { params(val: T.nilable(BSON::ObjectId)).returns(T.nilable(BSON::ObjectId)) }
  def id=(val); end

  sig { returns(T::Boolean) }
  def id?; end

  sig { returns(T::Array[T.nilable(BSON::ObjectId)]) }
  def id_change; end

  sig { returns(T::Boolean) }
  def id_changed?; end

  sig { returns(T.nilable(BSON::ObjectId)) }
  def id_was; end

  sig { returns(T.nilable(BSON::ObjectId)) }
  def reset__id!; end

  sig { returns(T.nilable(String)) }
  def reset_a!; end

  sig { returns(T.nilable(T::Array[T.untyped])) }
  def reset_array_field!; end

  sig { returns(T.nilable(String)) }
  def reset_author!; end

  sig { returns(T.nilable(String)) }
  def reset_body!; end

  sig { returns(T.nilable(Integer)) }
  def reset_count!; end

  sig { returns(T.nilable(Time)) }
  def reset_created_at!; end

  sig { returns(T.nilable(BSON::ObjectId)) }
  def reset_id!; end

  sig { returns(T.nilable(T::Hash[T.untyped, T.untyped])) }
  def reset_settings!; end

  sig { returns(T.nilable(Mongoid::StringifiedSymbol)) }
  def reset_status!; end

  sig { returns(T.nilable(String)) }
  def reset_title!; end

  sig { returns(T.nilable(Time)) }
  def reset_updated_at!; end

  sig { returns(T.nilable(T::Hash[T.untyped, T.untyped])) }
  def settings; end

  sig { params(val: T.nilable(T::Hash[T.untyped, T.untyped])).returns(T.nilable(T::Hash[T.untyped, T.untyped])) }
  def settings=(val); end

  sig { returns(T::Boolean) }
  def settings?; end

  sig { returns(T::Array[T.nilable(T::Hash[T.untyped, T.untyped])]) }
  def settings_change; end

  sig { returns(T::Boolean) }
  def settings_changed?; end

  sig { returns(T.nilable(T::Hash[T.untyped, T.untyped])) }
  def settings_was; end

  sig { returns(T.nilable(Mongoid::StringifiedSymbol)) }
  def status; end

  sig { params(val: T.nilable(Mongoid::StringifiedSymbol)).returns(T.nilable(Mongoid::StringifiedSymbol)) }
  def status=(val); end

  sig { returns(T::Boolean) }
  def status?; end

  sig { returns(T::Array[T.nilable(Mongoid::StringifiedSymbol)]) }
  def status_change; end

  sig { returns(T::Boolean) }
  def status_changed?; end

  sig { returns(T.nilable(Mongoid::StringifiedSymbol)) }
  def status_was; end

  sig { returns(T.nilable(String)) }
  def title; end

  sig { params(val: T.nilable(String)).returns(T.nilable(String)) }
  def title=(val); end

  sig { returns(T::Boolean) }
  def title?; end

  sig { returns(T::Array[T.nilable(String)]) }
  def title_change; end

  sig { returns(T::Boolean) }
  def title_changed?; end

  sig { returns(T.nilable(String)) }
  def title_was; end

  sig { returns(T.nilable(Time)) }
  def updated_at; end

  sig { params(val: T.nilable(Time)).returns(T.nilable(Time)) }
  def updated_at=(val); end

  sig { returns(T::Boolean) }
  def updated_at?; end

  sig { returns(T::Array[T.nilable(Time)]) }
  def updated_at_change; end

  sig { returns(T::Boolean) }
  def updated_at_changed?; end

  sig { returns(T.nilable(Time)) }
  def updated_at_was; end
end
